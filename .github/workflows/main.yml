name: Deploy to GCP App Engine

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn
        if: |
          steps.cache-yarn.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: 'Set env var'
        if: github.ref == 'refs/heads/main'
        run: node packages/app/scripts/compile-env ${{ secrets.INFURA_ID }}

      - name: 'Build React app for GCP App Engine'
        if: github.ref == 'refs/heads/main'
        run: yarn app:build-ae

      - name: 'Deploy to GCP App Engine'
        if: github.ref == 'refs/heads/main'
        uses: GoogleCloudPlatform/github-actions/appengine-deploy@master
        with:
          deliverables: packages/app/dist/app.yaml
          credentials: ${{ secrets.GCP_PROD_SA_KEY }}
          promote: false
